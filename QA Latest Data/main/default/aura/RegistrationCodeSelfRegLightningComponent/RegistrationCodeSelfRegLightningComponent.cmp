<aura:component controller="SelfRegisterTradeAllyController" implements="forceCommunity:availableForAllPageTypes" access="global">
	<!--Attributes-->
    <!--Standard Attributes-->
    <aura:attribute name="accountId" type="String" required="false" description="accountId for creating the user. If not specified, it will create a PersonAccount if possible for B2C scenario. Or otherwise if it's in a community, the community's self-registration accountId will be used."/>
    <aura:attribute name="regConfirmUrl" type="String" required="true" access="global"/>
    <aura:attribute name="startUrl" type="String" required="false" description="The url you go to after a successful login" access="global" />
    <aura:attribute name="showError" type="Boolean" required="true" description="" default="false" access="private"/>
    <aura:attribute name="errorMessage" type="String" required="false" description="" access="private"/>
    <aura:attribute name="firstnameLabel" type="String" required="false" default="First Name" access="global"/>
    <aura:attribute name="lastnameLabel" type="String" required="false" default="Last Name" access="global"/>
    <aura:attribute name="emailLabel" type="String" required="false" default="Email" access="global"/>
    <aura:attribute name="passwordLabel" type="String" required="false" default="Create Password" access="global"/>
    <aura:attribute name="confirmPasswordLabel" type="String" required="false" default="Confirm Password" access="global"/>    
    <aura:attribute name="submitButtonLabel" type="String" required="false" default="Sign Up" access="global"/>
    <aura:attribute name="includeRecaptcha" type="Boolean" required="false" default="true" access="global"/>
	<aura:attribute name="includeApplicationType" type="Boolean" required="false" default="false" access="global"/>
    <aura:attribute name="approvalForSubUser" type="Boolean" required="false" default="true" access="global"/>
    <aura:attribute name="includePasswordField" type="Boolean" required="false" default="false" description="Whether to include password" access="global"/>    
    <aura:attribute name="extraFieldsFieldSet" type="String" required="false" description="A field set name whose fields are desired for user registration" access="global"/>
    <aura:attribute name="extraFields" type="list" required="false" description="A field set name whose fields are desired for user registration"/>
    <aura:attribute name="expid" type="String" required="false" description="The branding experience ID" /> 
    <!--Custom Attributes-->   
    <aura:attribute name="wasGoogleRecaptchaPassed" type="Boolean" default="false" />
    <aura:attribute name="registrationCode" type="String" default="" />
    <aura:attribute name="selfRegisterTradeAllyWrapper" type="SelfRegisterTradeAllyWrapper" default="" />
    <aura:attribute name="domainUrl" type="String" default="" access="global" />
    <aura:attribute name="communityUrl" type="String" default="" access="global" />
    <!--Company Only Information-->
    <aura:attribute name="availableLocations" type="List" default="" />
    <aura:attribute name="availableBusinessTypes" type="List" default="" />
    <aura:attribute name="companyBillingCity" type="String" default="" />
    <aura:attribute name="companyBillingState" type="String" default="" />
    <aura:attribute name="companyBusinessType" type="String" default="" />
    <aura:attribute name="companyPhoneNumber" type="String" default="" />
    
    <!--Handlers-->
    <!--Standard Handlers-->
    <aura:handler name="init" value="{!this}" action="{!c.initialize}"/>
    <!--<aura:handler name="init" value="{!this}" action="{!c.initialize}"/>-->
    <aura:handler event="c:setStartUrl" action="{!c.setStartUrl}"/> 
    <aura:handler event="c:setExpId" action="{!c.setExpId}"/>    
    <!--Custom Handlers-->
    <aura:handler event="c:WasGoogleRecaptchaPassedEvent" action="{!c.handleGoogleRecaptchaPassed}" />
 
    <!--Register events-->
    <aura:registerevent name="sitePropagatedStartUrl" type="c:setStartUrl"/>

    <!--Dependencies-->
    <aura:dependency resource="c:setStartUrl" type="EVENT"/>
    <aura:dependency resource="c:setExpId" type="EVENT"/>

	<div class="selfRegisterPage">
        <aura:if isTrue="{!empty(v.selfRegisterTradeAllyWrapper)}">
            <div class="rigistercontainer">
				<!--Registration Ð¡ode-->
                <div id="sfdc_extrafield_container" class="sfdc"> 
                    <ui:inputText value="{!v.registrationCode}" aura:id="registration-Code" placeholder="Registration Code" keyup="{!c.onKeyUp}" class="input sfdc_extrafieldinput sfdc"/>
                </div>
                <!--Business Type picklist-->
				<aura:renderIf isTrue="{!v.includeApplicationType}">
					<div id="sfdc_extrafield_container" class="sfdc">  
						<ui:inputSelect value="{!v.companyBusinessType}" aura:id="company-business-type" class="input sfdc_extrafieldinput sfdc">
							<aura:iteration items="{!v.availableBusinessTypes}" var="availableBusinessType">
								<ui:inputSelectOption text="{!availableBusinessType.value}" label="{!availableBusinessType.label}"/>
							</aura:iteration>
						</ui:inputSelect>
					</div>
				</aura:renderIf>
                <!--Standard user fields-->
                <div id="sfdc_username_container" class="sfdc">
                    <ui:inputText value="" aura:id="firstname" placeholder="{!v.firstnameLabel}" keyup="{!c.onKeyUp}" class="input sfdc_usernameinput sfdc"/>
                </div>
                <div id="sfdc_nickname_container" class="sfdc">
                    <ui:inputText value="" aura:id="lastname" placeholder="{!v.lastnameLabel}" keyup="{!c.onKeyUp}" class="input sfdc_usernameinput sfdc"/>
                </div>
                <div id="sfdc_email_container" class="sfdc">
                    <ui:inputText value="" aura:id="email" placeholder="{!v.emailLabel}" keyup="{!c.onKeyUp}" class="input sfdc_usernameinput sfdc"/>
                </div>
                <!--Fields from the User field set-->
                <aura:iteration aura:id="extraFields" items="{!v.extraFields}" var="curField" indexVar="index">
                    <div id="sfdc_extrafield_container" class="sfdc">
                        <aura:if isTrue="{!or(curField.fieldPath == 'Accept_TC__c', curField.fieldPath == 'Nexant__Accept_TC__c')}">
                            <ui:outputText value="{!curField.label}" />&nbsp;&nbsp;
                            <ui:inputSelect value="{!curField.value}" aura:id="{!curField.fieldPath}" class="input sfdc_extrafieldinput sfdc">
                                <ui:inputSelectOption text="" label=""/>
                                <ui:inputSelectOption text="Y" label="Yes"/>
                            </ui:inputSelect>
                            
                            <aura:set attribute="else">
                                <ui:inputText value="{!curField.value}" aura:id="{!curField.fieldPath}" placeholder="{!curField.label}" keyup="{!c.onKeyUp}" class="input sfdc_extrafieldinput sfdc"/>
                            </aura:set>
                        </aura:if>
                    </div>
                </aura:iteration>
                <!--Password fields-->
                <aura:renderIf isTrue="{!v.includePasswordField}">
                    <div id="sfdc_password_container" class="sfdc">
                        <ui:inputSecret value="" aura:id="password" placeholder="{!v.passwordLabel}" keyup="{!c.onKeyUp}" class="input sfdc_passwordinput sfdc"/>
                    </div>
                    <div id="sfdc_confirm_password_container" class="sfdc">
                        <ui:inputSecret value="" aura:id="confirmPassword" placeholder="{!v.confirmPasswordLabel}" keyup="{!c.onKeyUp}" class="input sfdc_passwordinput sfdc"/>
                    </div>
                </aura:renderIf>
                <lightning:button aura:id="submitButton" label="{!v.submitButtonLabel}" onclick="{!c.handleSelfRegister}" class="sfdc_button"/>
                <!--Error alert-->
                <aura:renderIf isTrue="{!v.showError}">
                    <div id="error" class="slds-notify slds-notify_alert slds-theme_alert-texture slds-theme_error" role="alert">
                        <span class="slds-assistive-text">error</span>
                        <span class="slds-icon_container slds-icon-utility-error slds-m-right_x-small" title="Description of icon when needed">
                            <lightning:icon iconName="utility:error"></lightning:icon>
                        </span>
                        <ui:outputRichText value="{!v.errorMessage}"/>
                    </div>
                </aura:renderIf>
                <!--Google Recaptcha-->
                <aura:renderIf isTrue="{!v.includeRecaptcha}">
					<c:RecaptchaLightningComponent domainUrl="{!v.domainUrl}" communityUrl="{!v.communityUrl}" />
                </aura:renderIf>
            </div>
        </aura:if>
    </div>

</aura:component>